{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOmUenqHsVAzSHBhWWy7ln4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"2FOkQiLU_q2Y","executionInfo":{"status":"error","timestamp":1697418366349,"user_tz":300,"elapsed":331018,"user":{"displayName":"Maria Fernanda Vergara Teran","userId":"12308466740707295731"}},"outputId":"a6e6b2c3-29ff-41b4-f97d-1b44affa1d31"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Menú:\n","1. Agregar estudiante\n","2. Buscar estudiante\n","3. Modificar notas\n","4. Cancelar notas\n","5. Resultados por estudiante\n","6. Salir\n","Seleccione una opción (1/2/3/4/5/6): 1\n","Identificación: 1127591445\n","Nombre: maria vergara\n","Correo: mariafe2545@gmail.com\n","Teléfono: 3053812055\n","Fecha de Nacimiento: 07 de octubre del 2002\n","Nota 1: 4\n","Nota 2: 4\n","Nota 3: 5\n","Nota 4: 2\n","Estudiante maria vergara agregado con éxito.\n","\n","Menú:\n","1. Agregar estudiante\n","2. Buscar estudiante\n","3. Modificar notas\n","4. Cancelar notas\n","5. Resultados por estudiante\n","6. Salir\n","Seleccione una opción (1/2/3/4/5/6): 5\n","Identificación del estudiante para ver resultados: 1127591445\n","Información para el estudiante maria vergara:\n","Nota Final: 3.75\n","Nota Promedio del Grupo: 3.75\n","El estudiante tiene la misma nota que el promedio del grupo.\n","El estudiante ha ganado el curso.\n","\n","Menú:\n","1. Agregar estudiante\n","2. Buscar estudiante\n","3. Modificar notas\n","4. Cancelar notas\n","5. Resultados por estudiante\n","6. Salir\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-7c39dd991333>\u001b[0m in \u001b[0;36m<cell line: 136>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    135\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    136\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 137\u001b[0;31m     \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-2-7c39dd991333>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m     77\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"6. Salir\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 79\u001b[0;31m         \u001b[0mopcion\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Seleccione una opción (1/2/3/4/5/6): \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     80\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     81\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mopcion\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"1\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}],"source":["class Estudiante:\n","    def __init__(self, identificacion, nombre, correo, telefono, fecha_nacimiento, nota1, nota2, nota3, nota4):\n","        self.identificacion = identificacion\n","        self.nombre = nombre\n","        self.correo = correo\n","        self.telefono = telefono\n","        self.fecha_nacimiento = fecha_nacimiento\n","        self.notas = [nota1, nota2, nota3, nota4]\n","\n","    def calcular_nota_final(self):\n","        return sum(self.notas) / len(self.notas)\n","\n","    def __str__(self):\n","        return f\"Estudiante: {self.nombre}, ID: {self.identificacion}, Nota Final: {self.calcular_nota_final()}\"\n","\n","\n","def agregar_estudiante(estudiantes, estudiante):\n","    estudiantes.append(estudiante)\n","    print(f\"Estudiante {estudiante.nombre} agregado con éxito.\")\n","\n","\n","def buscar_estudiante(estudiantes, identificacion):\n","    for estudiante in estudiantes:\n","        if estudiante.identificacion == identificacion:\n","            return estudiante\n","    return None\n","\n","\n","def modificar_notas(estudiante):\n","    print(f\"Modificar notas para el estudiante: {estudiante.nombre}\")\n","    for i in range(4):\n","        nueva_nota = float(input(f\"Ingrese la nueva nota {i + 1}: \"))\n","        estudiante.notas[i] = nueva_nota\n","\n","\n","def cancelar_notas(estudiante):\n","    print(f\"Cancelar notas para el estudiante: {estudiante.nombre}\")\n","    for i in range(4):\n","        estudiante.notas[i] = 0\n","    print(f\"Notas canceladas para el estudiante {estudiante.nombre}.\")\n","\n","\n","def calcular_promedio_grupo(estudiantes):\n","    total_notas = sum(est.calcular_nota_final() for est in estudiantes)\n","    promedio_grupo = total_notas / len(estudiantes)\n","    return promedio_grupo\n","\n","\n","def informar_estudiante(estudiante, promedio_grupo):\n","    nota_final = estudiante.calcular_nota_final()\n","    print(f\"Información para el estudiante {estudiante.nombre}:\")\n","    print(f\"Nota Final: {nota_final}\")\n","    print(f\"Nota Promedio del Grupo: {promedio_grupo}\")\n","\n","    if nota_final > promedio_grupo:\n","        print(\"El estudiante está por encima de la media del grupo.\")\n","    elif nota_final < promedio_grupo:\n","        print(\"El estudiante está por debajo de la media del grupo.\")\n","    else:\n","        print(\"El estudiante tiene la misma nota que el promedio del grupo.\")\n","\n","    if nota_final >= 3.0:\n","        print(\"El estudiante ha ganado el curso.\")\n","    else:\n","        print(\"El estudiante ha perdido el curso.\")\n","\n","\n","def main():\n","    estudiantes = []\n","    while True:\n","        print(\"\\nMenú:\")\n","        print(\"1. Agregar estudiante\")\n","        print(\"2. Buscar estudiante\")\n","        print(\"3. Modificar notas\")\n","        print(\"4. Cancelar notas\")\n","        print(\"5. Resultados por estudiante\")\n","        print(\"6. Salir\")\n","\n","        opcion = input(\"Seleccione una opción (1/2/3/4/5/6): \")\n","\n","        if opcion == \"1\":\n","            identificacion = input(\"Identificación: \")\n","            nombre = input(\"Nombre: \")\n","            correo = input(\"Correo: \")\n","            telefono = input(\"Teléfono: \")\n","            fecha_nacimiento = input(\"Fecha de Nacimiento: \")\n","            nota1 = float(input(\"Nota 1: \"))\n","            nota2 = float(input(\"Nota 2: \"))\n","            nota3 = float(input(\"Nota 3: \"))\n","            nota4 = float(input(\"Nota 4: \"))\n","\n","            estudiante = Estudiante(identificacion, nombre, correo, telefono, fecha_nacimiento, nota1, nota2, nota3, nota4)\n","            agregar_estudiante(estudiantes, estudiante)\n","\n","        elif opcion == \"2\":\n","            identificacion = input(\"Identificación del estudiante a buscar: \")\n","            estudiante = buscar_estudiante(estudiantes, identificacion)\n","            if estudiante:\n","                print(estudiante)\n","            else:\n","                print(\"Estudiante no encontrado.\")\n","\n","        elif opcion == \"3\":\n","            identificacion = input(\"Identificación del estudiante a modificar: \")\n","            estudiante = buscar_estudiante(estudiantes, identificacion)\n","            if estudiante:\n","                modificar_notas(estudiante)\n","                print(\"Notas modificadas con éxito.\")\n","            else:\n","                print(\"Estudiante no encontrado.\")\n","\n","        elif opcion == \"4\":\n","            identificacion = input(\"Identificación del estudiante a cancelar notas: \")\n","            estudiante = buscar_estudiante(estudiantes, identificacion)\n","            if estudiante:\n","                cancelar_notas(estudiante)\n","            else:\n","                print(\"Estudiante no encontrado.\")\n","\n","        elif opcion == \"5\":\n","            identificacion = input(\"Identificación del estudiante para ver resultados: \")\n","            estudiante = buscar_estudiante(estudiantes, identificacion)\n","            if estudiante:\n","                promedio_grupo = calcular_promedio_grupo(estudiantes)\n","                informar_estudiante(estudiante, promedio_grupo)\n","            else:\n","                print(\"Estudiante no encontrado.\")\n","\n","        elif opcion == \"6\":\n","            break\n","\n","        else:\n","            print(\"Opción no válida. Por favor, seleccione una opción válida.\")\n","\n","\n","if __name__ == \"__main__\":\n","    main()\n"]}]}