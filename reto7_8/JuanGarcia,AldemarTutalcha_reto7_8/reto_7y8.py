# -*- coding: utf-8 -*-
"""Reto 7y8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JUiohYDrQWw0lj5efVE7nulHS-Oy8dP7

1.	Crear un objeto de tipo ndarray, con números enteros entre 64 hasta 1024.

2.	Redimensionar a una matriz bidimensional que tenga las 1024 observaciones, pero que su dimensión tenga tanto el mismo número de filas como de columnas, con la finalidad de obtener una cuadrada.

3.	Crear una columna de datos aleatorios de 30 observaciones o registros, en la que se escojan dichos registros desde una lista de 10 nombres. Se debe repetir el proceso anterior para crear un set de números de cédulas aleatorio para cada uno de los nombres.

Lista=[‘Andres’,’Maria’,’Manuel’,’Daniel’,’Sarah’,’Cristian’,’Violetta’,’Lucia’,’Jackson’,’Jose’]


4.	Concatenar un nuevo vector con las observaciones de los nombres y cédulas.

5.	Mostrar la posición del número más grande de las cédulas generadas del vector creado en el punto 4. Se debe investigar Slicing notation en numpy.
"""

#Importando numpy
import numpy as np

#PTO1. Objeto de tipo ndarray con números enteros entre 64 y 1024
objeto = np.arange(64,1024)
objeto

#PTO 2. Se crea las 1024 observaciones con arnage y se redimensiona con reshape
objeto1 = np.arange(1024).reshape(32,32)
objeto1

#PTO3. Se crea una columna de  datos aleatorios de 30 0bservaciones que poseen  su respectivo nombre
lista=['Andres','Maria','Manuel','Daniel','Sarah','Cristian','Violetta','Lucia','Jackson','Jose']
obs =[]
for i in range(0,30,1):
  obs1 = np.random.choice(lista)
  obs.append(obs1)
obs

#Se crea  un set de numeros de cedulas de ciudadania aleotorios
cedula = ['1234', '0987','2876', '2740', '1029', '3475', '7638', '5280', '6543', '9012']
reg = []
for i in range(0,30,1):
  reg1 = np.random.choice(cedula)
  reg.append(reg1)
reg

#PTO 4. Se  crea un vector que concatena la cedula con su respectivo nombre.
vect_con = np.ma.concatenate(([lista],[cedula]), axis = 0)
vect_con

#PTO 5. Con slicing notation se muestra la posicion del numero mas grande de las cedulas generadas en el pto anterior.
max = np.argmax(vect_con, axis = 1)
max