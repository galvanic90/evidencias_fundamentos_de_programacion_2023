# -*- coding: utf-8 -*-
"""Ana_Milena_Rosero_Unigarro_Reto_7-8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17D6fLFNCaEIku6JbQd3W_ou2KxX_G8AW
"""

#importamos la libreria numpy y random
import numpy as np
import random

# Paso 1: Crear un objeto ndarray con números enteros entre 64 y 1024
#se crea un arreglo con el ranfo de numeros indicados
arr = np.arange(64, 1025)

# Paso 2: Redimensionar a una matriz cuadrada de 1024x1024
#debemos realizar este paso dado que directamente no se puede realizar, por ello utilizamos la raiz cuadra del tamño de la matriz, para evitar generar un erro ya que no se puede remodelar una matriz de tamaño 1024
n = int(np.sqrt(arr.size))  # Calcula la raíz cuadrada del tamaño
arr = arr[:n**2].reshape(n, n)  # Redimensiona a una matriz cuadrada

# Paso 3: Crear una columna de datos aleatorios de 30 observaciones y cédulas aleatorias
#creamos con los datos solicitados, la columna para generar los datos aleatoreos solicitados
nombres = ['Andres', 'Maria', 'Manuel', 'Daniel', 'Sarah', 'Cristian', 'Violetta', 'Lucia', 'Jackson', 'Jose']
#generamos nombres aleatoreos
nombres_aleatorios = random.choices(nombres, k=30)
# Generar cédulas aleatorias de 10 dígitos para cada nombre
cedulas_aleatorias = [random.randint(1000000000, 9999999999) for _ in range(30)]

# Paso 4: Concatenar nombres y cédulas en un nuevo vector
# en este paso procedemos a concatenar los nombres aleatoreos y cedulas aleatoreas generadas en el paso numero 3
vector_concatenado = np.column_stack((nombres_aleatorios, cedulas_aleatorias))

# Paso 5: Encontrar la posición del número más grande en las cédulas
# con el siguiente codigo buescamos el numero mayor generado en los datos de las cedulas aleatorieas
posicion_max = np.argmax(cedulas_aleatorias)

# Mostrar resultados
#en este ultimo pasao mostramos los resultados generados del ejercicio
print("Matriz cuadrada:\n", arr) # uestra la matriz  generada
print("\nNombres y cédulas aleatorias:\n", vector_concatenado) # muestra los nombres y cedulas generadas aleatoreamente
print("\nPosición del número más grande en las cédulas:", posicion_max) # nos indica la posisicon donde se encuentra el mumero mayor de cedula generada